<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jobxhub.server.dao.TerminalDao">

    <resultMap id="TerminalBean" type="com.jobxhub.server.domain.TerminalBean" >
        <result column="id"                 property="id" />
        <result column="name"               property="name" />
        <result column="host"               property="host" />
        <result column="user_name"          property="userName" />
        <result column="authorization"      property="authorization" />
        <result column="login_time"         property="loginTime" />
        <result column="passphrase"         property="passphrase" />
        <result column="port"               property="port" />
        <result column="private_key"        property="privateKey" />
        <result column="ssh_type"           property="sshType" />
        <result column="status"             property="status" />
        <result column="theme"              property="theme" />
        <result column="user_id"            property="userId" />
    </resultMap>

    <sql id="query_Terminal">
        t.id,
        t.authorization,
        t.host,
        t.login_time,
        t.name,
        t.passphrase,
        t.port,
        t.private_key,
        t.ssh_type,
        t.status,
        t.theme,
        t.user_id,
        t.user_name
    </sql>

    <select id="getById" parameterType="java.lang.Long" resultMap="TerminalBean">
        select
        <include refid="query_Terminal"/>
        from  t_terminal as t
        where t.id=#{id}
    </select>

    <select id="getByUser" parameterType="java.lang.Long" resultMap="TerminalBean">
        select
        <include refid="query_Terminal"/>
        from  t_terminal as t
        where user_id = #{userId}
    </select>

    <select id="getByPageBean" parameterType="com.jobxhub.server.tag.PageBean" resultMap="TerminalBean">
        select
        <include refid="query_Terminal"/>
        from  t_terminal as t
        <if test="pager.filter.keys.size>0">
            where
            <foreach collection="pager.filter.keys" item="key" separator=" and ">
                ${key} = #{pager.filter[${key}]}
            </foreach>
        </if>
        <if test="pager.orderBy!=null">
            order by t.${pager.orderBy} ${pager.order}
        </if>
        limit #{pager.offset},#{pager.pageSize}
    </select>

    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from  t_terminal as t
        <if test="filter.keys.size>0">
            where
            <foreach collection="filter.keys" item="key" separator=" and ">
                ${key} = #{filter[${key}]}
            </foreach>
        </if>
    </select>

    <insert id="save" parameterType="com.jobxhub.server.domain.TerminalBean" useGeneratedKeys="true" keyProperty="id">
        insert into t_terminal (
            `name`,
            host,
            user_name,
            `authorization`,
            passphrase,
            port,
            private_key,
            ssh_type,
            status,
            theme,
            user_id
        ) values (
             #{name},
             #{host},
             #{userName},
             #{authorization},
             #{passphrase},
             #{port},
             #{privateKey},
             #{sshType},
             #{status},
             #{theme},
             #{userId}       
        )
    </insert>

    <update id="update" parameterType="com.jobxhub.server.domain.TerminalBean">
        update t_terminal
        set
            `name`           =      #{name},
            host             =      #{host},
            user_name        =      #{userName},
            `authorization`  =      #{authorization},
            passphrase       =      #{passphrase},
            port             =      #{port},
            private_key      =      #{privateKey},
            ssh_type         =      #{sshType},
            status           =      #{status},
            theme            =      #{theme},
            user_id           =      #{userId}
        where id = #{id}
	</update>

    <update id="updateLoginTime">
        update t_terminal
        set login_time = now()
        where id = #{id}
	</update>

    <update id="updateTheme">
        update t_terminal
        set theme = #{theme}
        where id = #{id}
	</update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from  t_terminal where id=#{id}
    </delete>

</mapper>